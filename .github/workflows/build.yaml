name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the code
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Disable shallow clones for better analysis relevance
      
      # 2. Set up Python 3.12
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install project dependencies
          pip install coverage  # Install coverage tool for reporting

      # 4. Run tests with coverage
      - name: Run tests with coverage
        run: |
          coverage run -m unittest discover -s tests -p "*_test.py"  # Specify test folder and pattern
          coverage report  # Display coverage report in the terminal
          coverage xml -o coverage.xml  # Generate the XML report (required for SonarQube integration)

      # 5. Run SonarQube scan
      - name: Run SonarQube scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }} # Replace with your actual SonarQube project key (no need to use secrets here)

      # 6. (Optional) Quality Gate check
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
